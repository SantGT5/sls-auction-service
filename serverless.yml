service: sls-auction-service

# Throw error when config or deprecation is found
configValidationMode: error
deprecationNotificationMode: error

plugins:
  - serverless-bundle

# Defining the AWS provider.
provider:
  name: aws
  runtime: nodejs16.x
  memorySize: 256
  stage: ${opt:stage, 'dev'}
  region: eu-west-1
  environment:
    AUCTIONS_TABLE_NAME: ${self:custom.AuctionsTable.name}
    MAIL_QUEUE_URL: ${self:custom.MailQueue.url}
  iam:
    role:
      statements:
        - ${file(iam/AuctionsTableIAM.yml):AuctionsTableIAM}
        - ${file(iam/MailQueueIAM.yml):MailQueueIAM}

# Creating & Config a DynamoDB table called AuctionsTable.
resources:
  Resources:
    AuctionsTable: ${file(resources/AuctionsTable.yml):AuctionsTable}

functions:
  createAuction:
    handler: src/handlers/createAuction.handler
    events:
      - http:
          method: POST
          path: /auction
          authorizer: ${self:custom.authorizer}

  getAuctions:
    handler: src/handlers/getAuctions.handler
    events:
      - http:
          method: GET
          path: /auctions
          authorizer: ${self:custom.authorizer}

  getAuction:
    handler: src/handlers/getAuction.handler
    events:
      - http:
          method: GET
          path: /auction/{id}
          authorizer: ${self:custom.authorizer}

  placeBid:
    handler: src/handlers/placeBid.handler
    events:
      - http:
          method: PATCH
          path: /auction/{id}/bid
          authorizer: ${self:custom.authorizer}

  processAuctions:
    handler: src/handlers/processAuctions.handler
    # events:
    #   - schedule: rate(1 minute)

custom:
  authorizer: arn:aws:lambda:${aws:region}:${aws:accountId}:function:serverless-auth0-authorizer-${self:provider.stage}-auth
  AuctionsTable:
    name: !Ref AuctionsTable
    arn: !GetAtt AuctionsTable.Arn
  MailQueue:
    arn: ${cf:sls-notification-${self:provider.stage}.MailQueueArn}
    url: ${cf:sls-notification-${self:provider.stage}.MailQueueUrl}
  bundle:
    linting: false
